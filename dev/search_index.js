var documenterSearchIndex = {"docs":
[{"location":"home/#Background","page":"Home","title":"Background","text":"","category":"section"},{"location":"home/","page":"Home","title":"Home","text":"Pesto is an acronym for \"Phylogenetic Estimation of Shifts in the Tempo of Origination\".  Broadly speaking, it is a method for detecting shifts in the process of diversification that led to the biodiversity present today. In order to study diversification, we are interested in two events: speciation and extinction events.  Since these events are difficult to observe, we use a simple model, the birth-death process, to model what happened in the past.  On this page, there is some background material that introduces the mathematical models that we use.","category":"page"},{"location":"home/#The-birth-death-model","page":"Home","title":"The birth-death model","text":"","category":"section"},{"location":"home/","page":"Home","title":"Home","text":"Under the standard birth-death model, the tempo at which species speciate and go extinct are controlled by two parameters (Nee et al. 1994):","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"The speciation rate (lambda)\nThe extinction rate (mu)","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"In its simplest model, the rates of the birth-death process are the same across different lineages in the tree, and across time. By simulating under the birth-death process, and pruning the extinct lineages from the tree, one gets a reconstructed phylogenetic tree as a result (i.e. it is ultrametric, all tips end at the same time point).","category":"page"},{"location":"home/#The-birth-death-shift-model","page":"Home","title":"The birth-death-shift model","text":"","category":"section"},{"location":"home/","page":"Home","title":"Home","text":"The question we are interested in, is whether the process of diversification changed throughout the phylogenetic tree. In other words, was there a shift or not, and if so, how large was the shift? To do so, we are employing a variant of the state-dependent birth-death model (first presented by Maddison et al. 2007). This is also called the birth-death-shift model, or the lineage-specific birth-death model (Höhna et al. 2019). The birth-death-shift model has three parameters:","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"The state-dependent speciation rate (lambda_i)\nThe state-dependent extinction rate (mu_i)\nThe common shift rate (eta). ","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"<center><img src=\"../assets/bdshift.png\" alt=\"bdshift\" width=\"300\" height=\"300\"></center>","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"When a shift event occurs, the speciation and extinction rate shifts from the previous state (say lambda_1mu_1) to a new state with different rates (lambda_2mu_2). A rate shift to any other rate category occurs with rate eta, and a rate shift from state i to a specific other state j occurs with rate eta(K-1). The figure above depicts a three-state model. However, depending on how the model is set up, there can by any K number of states. ","category":"page"},{"location":"home/#The-likelihood","page":"Home","title":"The likelihood","text":"","category":"section"},{"location":"home/","page":"Home","title":"Home","text":"The probability of observing the tree is the same as for the binary-state speciation and extinction model (BiSSE, Maddison et al. 2007), and the multi-state speciation and extinction model (MuSSE, FitzJohn 2012). We first calculate the probability of going extinct before the present, if a lineage was alive at some age t in the past:","category":"page"},{"location":"home/","page":"Home","title":"Home","text":" fracdE_i(t)dt = mu_i - (lambda_i + mu_i + eta) E_i(t) + lambda_i E_i(t)^2 + fracetaK-1 sum_j neq i^K E_j(t)","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"The initial state for E_i(t) is equal to 1-rho for all states, where rho is the taxon sampling fraction (we assume uniform taxon sampling probability). Next, we calculate the probability that a lineage alive at age t was observed in the reconstructed tree:","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"fracdD_Mi(t)dt = - (lambda_i + mu_i + eta) D_Mi(t) + 2 lambda_i D_Mi(t) E_i(t) + fracetaK-1 sum_j neq i^K D_Mj(t)","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"We solve D_Mi(t) for each branch M and each state i, in a postorder tree traversal.  At the tips, the initial state is D_Mi(t)=rho for all states.   At the branching events, the initial state for the parent branch P is assigned D_Pi(t) = lambda_i times D_Li(t) times D_Ri(t) where L and R are the left and right descendant branches.   Continuing this toward the root of the tree, we calculate the likelihood as follows:","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"L = frac1Ksum_i=1^K Big  fracD_Li(t) times D_Ri(t)(1 - E_k(t))^2 Big ","category":"page"},{"location":"home/","page":"Home","title":"Home","text":"where t is the age of the most recent common ancestor.","category":"page"},{"location":"home/#References","page":"Home","title":"References","text":"","category":"section"},{"location":"home/","page":"Home","title":"Home","text":"Nee, S., May, R. M., & Harvey, P. H. (1994). The reconstructed evolutionary process. Philosophical Transactions of the Royal Society of London. Series B: Biological Sciences, 344(1309), 305-311.\nMaddison, W. P., Midford, P. E., & Otto, S. P. (2007). Estimating a binary character's effect on speciation and extinction. Systematic biology, 56(5), 701-710.\nFitzJohn, R. G. (2012). Diversitree: comparative phylogenetic analyses of diversification in R. Methods in Ecology and Evolution, 3(6), 1084-1092.\nHöhna, S., Freyman, W. A., Nolen, Z., Huelsenbeck, J. P., May, M. R., & Moore, B. R. (2019). A Bayesian approach for estimating branch-specific speciation and extinction rates. BioRxiv, 555805.","category":"page"},{"location":"analysis/extended/#extended","page":"Extended analysis","title":"Extended rate analysis","text":"","category":"section"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"In this vignette, we will do the same as in the simple analysis, but we explain how the model is set up in more detail.","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"We use a State-dependent Speciation Extinction (SSE) model, with a K-sized state space, in order to get at the question of rate heterogeneity across branches. The Binary SSE model (BiSSE) was first introduced to study rate variation in association with trait data, i.e. each species was assigned a state at the tips of the tree. In our approach, however, we don't use trait data, and consider the tip states unknown, and equally probable for all states at the tips. ","category":"page"},{"location":"analysis/extended/#Tree-file","page":"Extended analysis","title":"Tree file","text":"","category":"section"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"First, we load the necessary modules and read in the tree file.","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"using Pesto\n\nρ = 0.635\n\ninclude(\"../../src/primates.jl\")","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"using Pesto\n\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.635\nprimates = SSEdata(phy, ρ)","category":"page"},{"location":"analysis/extended/#Model-choice","page":"Extended analysis","title":"Model choice","text":"","category":"section"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"Next, we set up the SSE model, including its dimensionality and hyperparameters. For this model, we will draw the speciation rate (λ) and extinction rate (µ) from LogNormal distributions. We pick the median of the LogNormal distributions such that they correspond to the maximum-likelihood estimates of the constant-rate birth-death model. We pick the log-sd as H = 0.587, which corresponds to a LogNormal distribution whose 2.5%-97.5% quantile spans one order of magnitude. ","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"λml, μml = estimate_constant_bdp(primates)\n\nH = 0.587\nn = 6\n\nusing Distributions\ndλ = LogNormal(log(λml), H)\ndμ = LogNormal(log(µml), H)\n\nλquantiles = make_quantiles(dλ, n)\nµquantiles = make_quantiles(dμ, n)\nλ, μ = allpairwise(λquantiles, µquantiles)\nnothing # hide","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"The scatter plot of λ on the x-axis, and µ on the y-axis looks like the figure below (blue dots), with the quantiles of the LogNormal distributions on the margin.","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"(Image: primatestree)","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"Next, we estimate the rate shift parameter η under the SSE model, conditional on λ and µ.","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"η = optimize_eta(λ, µ, primates)","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"The units of eta are number of rate shift events per lineage per time. The product of the tree length times eta will give us the number of expected rate changes under the prior:","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"sum(primates.branch_lengths) * η","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"This allows us to set up the SSE model object:","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"model = SSEconstant(λ, μ, η)\nnothing # hide","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"With the model and data objects we can for example calculate the log likelihood","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"logL_root(model, primates)","category":"page"},{"location":"analysis/extended/#Branch-rates-and-shifts","page":"Extended analysis","title":"Branch rates and shifts","text":"","category":"section"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"Or we can compute both the postorder and preorder pass, and get the expected speciation and extinction rates per branch. The result is a data frame object, and we print the first five rows:","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"rates = birth_death_shift(model, primates)\nrates[1:5,:]","category":"page"},{"location":"analysis/extended/#Tree-plots","page":"Extended analysis","title":"Tree plots","text":"","category":"section"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"If we want to plot the results, we can use the module RCall. Julia objects can be exported to an R session using the macro @rput, (and retrieved from R with @rget). R code can be called by prefixing a string with R, e.g. R\"print()\", or multiline R\"\"\"...\"\"\". You can also enter the R session interactively through the Julia REPL by entering the character $. Here we plot the phylogeny using some R-packages that we load first.","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"using RCall\n\n@rput primates\n@rput rates\n\nR\"\"\"\nlibrary(tibble)\nlibrary(tidytree)\nx <- as_tibble(primates)\ntd <- as.treedata(merge(x, rates, by = \"node\"))\n\"\"\"","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"We can plot the mean speciation rate","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"R\"\"\"\nlibrary(ggtree)\np1 <- ggtree(td, aes(color = mean_lambda)) +  \n    geom_tiplab(size=2)\n\"\"\"","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"(Image: primatestree)","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"We can also plot the number of accumulated shifts on the branches","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"R\"\"\"\nlibrary(ggplot2)\np2 <- ggtree(td, aes(color = nshift)) + \n    geom_tiplab(size=2) +\n    scale_colour_gradient(low = \"black\", high = \"red\")\n\"\"\"","category":"page"},{"location":"analysis/extended/","page":"Extended analysis","title":"Extended analysis","text":"(Image: primatestree)","category":"page"},{"location":"analysis/simple/#simple","page":"Simple analysis","title":"Simple analysis","text":"","category":"section"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"Here is an example of an analysis of branch-specific rates under the birth-death-shift model.","category":"page"},{"location":"analysis/simple/#Tree-file","page":"Simple analysis","title":"Tree file","text":"","category":"section"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"First, we load the necessary modules and read in the tree file.","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"using Pesto\n\nρ = 0.635\n\ninclude(\"../../src/primates.jl\")","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"using Pesto\n\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.635\nprimates = SSEdata(phy, ρ)","category":"page"},{"location":"analysis/simple/#Analysis","page":"Simple analysis","title":"Analysis","text":"","category":"section"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"A simple analysis can be done like so:","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"model, rates = pesto(primates)\nnothing # hide","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"To see how this analysis is set up, see the next section Extended analysis.","category":"page"},{"location":"analysis/simple/#Tree-plots","page":"Simple analysis","title":"Tree plots","text":"","category":"section"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"If we want to plot the results, we can use the module RCall. Julia objects can be exported to an R session using the macro @rput, (and retrieved from R with @rget). R code can be called by prefixing a string with R, e.g. R\"print()\", or multiline R\"\"\"...\"\"\". You can also enter the R session interactively through the Julia REPL by entering the character $. Here we plot the phylogeny using some R-packages that we load first.","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"using RCall\n\n@rput primates\n@rput rates\n\nR\"\"\"\nlibrary(tibble)\nlibrary(tidytree)\nx <- as_tibble(primates)\ntd <- as.treedata(merge(x, rates, by = \"node\"))\n\"\"\"","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"We can plot the mean speciation rate","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"R\"\"\"\nlibrary(ggtree)\np1 <- ggtree(td, aes(color = mean_lambda)) +  \n    geom_tiplab(size=2)\n\"\"\"","category":"page"},{"location":"analysis/simple/","page":"Simple analysis","title":"Simple analysis","text":"(Image: primatestree)","category":"page"},{"location":"analysis/tiprates/#tiprates","page":"Tip rates","title":"Tip rates","text":"","category":"section"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"In this vignette we will calculate the diversification rates at the tips of the phylogeny.","category":"page"},{"location":"analysis/tiprates/#Tree-file","page":"Tip rates","title":"Tree file","text":"","category":"section"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"First, we load the necessary modules and read in the tree file.","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"using Pesto\nusing Plots\n\nρ = 0.635\n\ninclude(\"../../src/primates.jl\")","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"using Pesto\nusing Plots\n\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.635\nprimates = SSEdata(phy, ρ)","category":"page"},{"location":"analysis/tiprates/#Model-setup","page":"Tip rates","title":"Model setup","text":"","category":"section"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"Let's use the LogNormal quantiles again.","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"λml, μml = estimate_constant_bdp(primates)\n\nH = 0.587\nn = 6\n\nusing Distributions\ndλ = LogNormal(log(λml), H)\ndμ = LogNormal(log(µml), H)\n\nλquantiles = make_quantiles(dλ, n)\nµquantiles = make_quantiles(dμ, n)\nλ, μ = allpairwise(λquantiles, µquantiles)\nη = optimize_eta(λ, µ, primates)\nmodel = SSEconstant(λ, μ, η)\nnothing # hide","category":"page"},{"location":"analysis/tiprates/#Ancestral-state-probabilities","page":"Tip rates","title":"Ancestral state probabilities","text":"","category":"section"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"We calculate the expression for the ancestral state probabilities (S(t)).","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"Ds, Fs = backwards_forwards_pass(model, primates)\nSs = ancestral_state_probabilities(primates, Ds, Fs)\nnothing # hide","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"The Ss is a dictionary indexed over the branches. Each item corresponds to the function that when evaluated at time t yields the ancestral state probabilities for being in each state. For example, at branch i=5, at time t=3.1, the ancestral state probabilities are","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"Ss[5](3.1)","category":"page"},{"location":"analysis/tiprates/#Tip-rates","page":"Tip rates","title":"Tip rates","text":"","category":"section"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"If we loop over the branch incides, and find out which branches are terminal branches, we can store the mean rate value at time t=0 for each species:","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"branch_indices = 1:size(primates.edges)[1]\nntips = length(primates.tiplab)\n\ntip_rates = Dict{String,Float64}()\nfor i in branch_indices\n    parent, child = primates.edges[i,:]\n\n    if child <= ntips\n        tiplab = primates.tiplab[child]\n\n        rate = model.λ\n        t = Ds[i].t[1]\n        S = Ss[i](t)\n        tip_rates[tiplab] = rate' * S\n    end\nend\ntip_rates","category":"page"},{"location":"analysis/tiprates/#Distribution","page":"Tip rates","title":"Distribution","text":"","category":"section"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"If we plot the tip rates as a histogram, we can see that the primates tips are bimodally distributed. The high-rate species are the Old World Monkeys, and the low-rate species is everything else in the tree.","category":"page"},{"location":"analysis/tiprates/","page":"Tip rates","title":"Tip rates","text":"histogram(collect(values(tip_rates)), bins = 30, \n          grid = false, label = \"\",\n          xlabel = \"Tip rate (speciation rate, λ)\",\n          ylabel = \"Frequency\", size = (500, 300))","category":"page"},{"location":"install/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"install/#Installing-Julia","page":"Installation","title":"Installing Julia","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Julia is a high-level programming language similar to R, Matlab or Python.  However, it is also a high-performance language. Julia programs can be similarly fast to those written in compiled languages like C/C++/Fortran. To install Julia, follow the instructions on the official website.","category":"page"},{"location":"install/#Editors","page":"Installation","title":"Editors","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"There are several options for how to work with Julia:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"(Recommended) Visual Studio Code is an integrated developer environment (IDE), which has both a file editor and a console for entering commands. If you have used RStudio before, Visual Studio Code will be very similar.\nYou can also run Julia in a Jupyter notebook, as is often done with Python projects.\nAlternatively, you can edit script files with your editor of choice (for example notepad/vim), and either copy-paste lines of copy into the Julia console or use the include(\"script.jl\") command.","category":"page"},{"location":"install/#Installing-Pesto.jl-(stable)","page":"Installation","title":"Installing Pesto.jl (stable)","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"To install the latest release of Pesto.jl, enter this in Julia:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"import Pkg\nPkg.add(\"Pesto\")","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"The package manager (Pkg) will automatically resolve and install any necessary dependencies.","category":"page"},{"location":"install/#Installing-Pesto.jl-(dev)","page":"Installation","title":"Installing Pesto.jl (dev)","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"If you want to use the developmental version of Pesto.jl, you can install it using a git repository URL. This can be done as follows:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"import Pkg\nPkg.add(url=\"https://github.com/kopperud/Pesto.jl\")","category":"page"},{"location":"install/#Loading-Pesto.jl","page":"Installation","title":"Loading Pesto.jl","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"Pesto can be loaded like so:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"using Pesto","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Since Julia is a JIT (just-in-time) compiled language, any code must be compiled before it can be run. To save some time, there is also a pre-compiling step the first time a module is loaded. This means we have to wait a short while. Once the module is finished pre-compiling, you are now ready!","category":"page"},{"location":"#Pesto.jl-Documentation","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"","category":"section"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"lorem ipsum","category":"page"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"plottree(x)","category":"page"},{"location":"#Pesto.plottree-Tuple{Any}","page":"Pesto.jl Documentation","title":"Pesto.plottree","text":"plottree(x)\n\nExample:\n\nres = bds(model, data)\nplottree(res)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"birth_death_shift(model, data)","category":"page"},{"location":"#Pesto.birth_death_shift-Tuple{Any, Any}","page":"Pesto.jl Documentation","title":"Pesto.birth_death_shift","text":"birth_death_shift(model, data[; verbose = false])\n\nCalculates average branch rates under the birth-death-shift model with a finite state space.\n\nExample:\n\nusing Pesto\n\nphy = readtree(Pesto.path(\"bears.tre\")) \nρ = 1.0  \ndata = make_SSEdata(phy, \"\", ρ; include_traits = false) \nλ = [0.1, 0.2] \nμ = [0.05, 0.15] \n\nη = 0.05 \nmodel = SSEconstant(λ, μ, η)\n\nres = birth_death_shift(model, data)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"Econstant(t, λ, µ, ρ)","category":"page"},{"location":"#Pesto.Econstant-NTuple{4, Any}","page":"Pesto.jl Documentation","title":"Pesto.Econstant","text":"from Morlon et al. 2011 [PNAS], eq. S4\n\nE(t) = 1 - fracexp(t(lambda - mu))frac1rho + fraclambdalambda -mu Big ( exp((lambda - mu)t) - 1 Big)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"ψ(t, λ, µ, ρ)","category":"page"},{"location":"#Pesto.ψ-NTuple{4, Any}","page":"Pesto.jl Documentation","title":"Pesto.ψ","text":"Equation S5 in Morlon et al. 2011 [PNAS]\n\npsi(s t) = e^(lambda - mu)(t - s)  1 + fracfraclambdalambda - mu(e^t(lambda - mu) - e^s(lambda-mu))frac1rho + fraclambdalambda - mu times (e^s(lambda-mu)-1)^-2\n\nWe use this one, simplified where s = 0\n\npsi(t) = frace^t(lambda - mu)  1 + fracrho lambdalambda - mu(e^t(lambda - mu) - 1)^2\n\nExample:\n\nρ = 1.0\nλ = 1.0\nμ = 0.5\nt = 0.1\n\nψ(t, λ, μ, ρ)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"lp(λ::Vector{Float64}, μ::Vector{Float64}, data::SSEdata)","category":"page"},{"location":"#Pesto.lp-Tuple{Vector{Float64}, Vector{Float64}, SSEdata}","page":"Pesto.jl Documentation","title":"Pesto.lp","text":"lp(λ, μ, data)\n\nFrom Louca and Pennell 2020 (Nature), eq. S28\n\nL = fracrho^n+1 lambda (1 - E(t_1))^2 times prod_i=1^n lambda times psi(0 t_i) \nE(t) = 1 - fracexp(lambda - mu)tfrac1rho + fraclambdalambda -mu Big ( exp((lambda - mu)t) - 1 Big) \npsi(t) = frace^t(lambda - mu)  1 + fracrho lambdalambda - mu(e^t(lambda - mu) - 1)^2\n\nLogged:\n\nlog(L) = (n+1) log(rho) + log(psi(t_1)) - log(lambda) - 2 log(1 - E(t_1)) + sum_i=1^n log(lambda) + log(psi(t_i))\n\nExample:\n\nλ = 1.0\nμ = 0.5\n\nphy = readtrees(Pesto.path(\"bears.tre\"))\nρ = 1.0\ndata = make_SSEdata2(phy, ρ)\n\nlp(λ, μ, data)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"estimate_constant_bdp(data::SSEdata)","category":"page"},{"location":"#Pesto.estimate_constant_bdp-Tuple{SSEdata}","page":"Pesto.jl Documentation","title":"Pesto.estimate_constant_bdp","text":"estimate_constant_bdp(data::SSEdata[; xinit = [0.11, 0.09], lower = [0.0001, 0.0001], upper = [20.0, 20.0]])\n\nEstimates the speciation and extinction rate under the reconstructed birth-death process with time-homogeneous rates.\n\nExample:\n\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.67\ndata = make_SSEdata2(phy, ρ)\n\nλml, μml = estimate_constant_bdp(data)\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"optimize_eta(λ::Vector{Float64}, µ::Vector{Float64}, data::SSEdata)","category":"page"},{"location":"#Pesto.optimize_eta-Tuple{Vector{Float64}, Vector{Float64}, SSEdata}","page":"Pesto.jl Documentation","title":"Pesto.optimize_eta","text":"optimize_eta(λ, μ, data)\n\nFinds the maximum-likelihood parameter value for η (the transition rate) under the birth-death-shift model with a finite state space, conditional on λ and μ.\n\nExample:\n\nusing Pesto\n\nphy = readtree(Pesto.path(\"primates.tre\")) \nρ = 0.635\ndata = make_SSEdata2(phy, ρ)\n\nλ = [0.1, 0.2, 0.3, 0.1, 0.2, 0.3, 0.1, 0.2, 0.3] \nμ = [0.09, 0.09, 0.09, 0.19, 0.19, 0.19, 0.29, 0.29, 0.29] \n\nηml = optimize_eta(λ, μ, data)\n\n#model = SSEconstant(λ, μ, ηml)\n\n11\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"make_descendants(data::SSEdata)","category":"page"},{"location":"#Pesto.make_descendants-Tuple{SSEdata}","page":"Pesto.jl Documentation","title":"Pesto.make_descendants","text":"make_descendants(data)\n\ntakes node indices as input, and returns edge indices Example:\n\nusing Pesto\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.635\ndata = make_SSEdata(phy, ρ)\n\nmake_descendants(data)\n\nwith result\n\nDict{Int64, Vector{Any}} with 232 entries:\n  402 => [330, 331]\n  413 => [357, 360]\n  425 => [380, 381]\n  ⋮   => ⋮\n\n\n\n\n\n","category":"method"},{"location":"","page":"Pesto.jl Documentation","title":"Pesto.jl Documentation","text":"make_ancestors(data::SSEdata)","category":"page"},{"location":"#Pesto.make_ancestors-Tuple{SSEdata}","page":"Pesto.jl Documentation","title":"Pesto.make_ancestors","text":"make_ancestors(data)\n\ntakes node indices as input, and returns edge indices\n\nExample:\n\nusing Pesto\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.635\ndata = make_SSEdata(phy, ρ)\n\nmake_ancestors(data)\n\nwith result\n\nDict{Int64, Int64} with 464 entries:\n  56  => 115\n  35  => 71\n  425 => 379\n  ⋮   => ⋮\n\n\n\n\n\n","category":"method"},{"location":"analysis/shifts/#shifts","page":"Number of shifts","title":"Number of rate shifts","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"In this vignette we go a little more in-depth and explain how the number of rate shifts (hatN) is estimated. ","category":"page"},{"location":"analysis/shifts/#Tree-file","page":"Number of shifts","title":"Tree file","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"First, we load the necessary modules and read in the tree file.","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"using Pesto\nusing Plots\n\nρ = 0.635\n\ninclude(\"../../src/primates.jl\")","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"using Pesto\nusing Plots\n\nphy = readtree(Pesto.path(\"primates.tre\"))\nρ = 0.635\nprimates = SSEdata(phy, ρ)","category":"page"},{"location":"analysis/shifts/#Model-setup","page":"Number of shifts","title":"Model setup","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"In this vignette, we pick the rate values by hand, and we don't use so many, in order to illustrate how the calculations work.","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"tree_length = sum(primates.branch_lengths)\nλ = [0.1, 0.2, 0.3, 0.4, 0.20]\nμ = [0.05, 0.15, 0.05, 0.15, 0.25]\nη = 1 / tree_length\nmodel = SSEconstant(λ, μ, η)\nnothing # hide","category":"page"},{"location":"analysis/shifts/#Branch-densities","page":"Number of shifts","title":"Branch densities","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"In order to calculate the number of state shifts, we must first calculate the branch probability densities conditional on the tips (postorder tree iteration):","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"fracdD_Midt = - (lambda_i + mu_i + eta) D_Mi + 2 lambda_i D_Mi E_i + fracetaK-1 sum_j neq i^K D_Mj","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"We also calculate the branch densities conditional on the ancestral states (preorder iteration):","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"fracdF_Midt = (lambda_i + mu_i + eta) F_Mi - 2 lambda_i F_Mi E_i - fracetaK-1 sum_j neq i^K F_Mj","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"where M is the branch index, and i is the state index. In code, this is done as follows:","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"Ds, Fs = backwards_forwards_pass(model, primates);\nnothing # hide","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"Ds and Fs are Dictionaries indexed over the branch indices (from 1 up to 2n-2). For example, branch i=2 has the numerical solution Ds[2]. If you are curious, we can plot the solution of D(t) for branch i=2 as follows:","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"using Plots\nplot(Ds[2], xflip = true, grid = false, legend = :topleft, \n     size = (500, 300), xlabel = \"time (Ma)\", ylab = \"D(t)\")","category":"page"},{"location":"analysis/shifts/#Ancestral-state-probabilities","page":"Number of shifts","title":"Ancestral state probabilities","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"In order to get the ancestral state probabilities, we need to compute","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"S_Mi(t) = fracF_Mi(t) D_Mi(t)sumlimits_j=1limits^K F_Mj(t) D_Mj(t)","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"which can be done using the following code:","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"Ss = ancestral_state_probabilities(primates, Ds, Fs)\nnothing # hide","category":"page"},{"location":"analysis/shifts/#Number-of-rate-shifts","page":"Number of shifts","title":"Number of rate shifts","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"The number of rate shifts from state j to state i accumulated over the branch length (from old to young) is described by the following differential equation","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"fracdhatN_Mijdt = S_Mj(t) frac-etaK-1 fracD_Mi(t)D_Mj(t) text if  j neq i","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"with initial condition hatN_ij(t_0) = 0. In Pesto, we would compute this using","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"nshift = state_shifts(model, primates, Ds, Ss; ape_order = false)\nnothing; # hide","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"The object returned nshift is a three-dimensional array. The first dimension corresponds to the branch index (what was M). The second dimension represents the arrival state (i), and the third dimension represents the departure state (j). If ape_order = false, then the first dimension is reordered such that the indices correspond to the node indices in the tree.","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"If we sum over second and third dimension, we get the number of rate shifts per branch:","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"sum(nshift, dims = 2:3)[:,1,1]","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"If instead we sum over the first dimension, we get a breakdown over which rate transitions were more frequent:","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"Nmatrix = sum(nshift, dims = 1)[1,:,:]","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"In this case, the most frequent rate shift was from state 2 to state 4, with hatN = 095 number of rate shifts. Going from state 2 to state 4 under this model means an increase of 04-02=02 in speciation rate units. This can for example be visualized using a histogram:","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"mids, bins = makebins(Nmatrix, model, -0.35, 0.35; nbins = 7)\nbplot = bar(mids, bins[:,1], xticks = (mids, round.(mids; digits = 2)), \n    xrotation = 90, label = \"\", grid = false,\n    xlabel = \"Change in speciation rate (λi - λj)\", ylabel = \"Number of rate shifts\",\n    size = (500, 300))","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"Most of the rate shift events represent a shift from a smaller to a larger speciation rate (i.e. lambda_i - lambda_j  0), however some rate shifts are in the other direction (lambda_i - lambda_j  0). There are also a few rate shift events where the speciation rate does not change (lambda_i - lambda_j = 0). In these events, it is the extinction rate that changes, and not the speciation rate. If we are interested in the question, \"what is the overall magnitude of shifts?\", we can calculate the mean shift magnitude (weighted by their frequencies):","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"frac1sum_ijhatN_ij sum_ij hatN_ij (lambda_i - lambda_j)","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"In Julia we can calculate it like so","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"shifts_weighted = Nmatrix .* (λ .- λ')\nmean_magnitude = sum(shifts_weighted) / sum(Nmatrix)","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"meaning that the overall shift magnitude for the primates tree under this model was an increase of 0.098 speciation rate units.","category":"page"},{"location":"analysis/shifts/#Tree-plots","page":"Number of shifts","title":"Tree plots","text":"","category":"section"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"If we want to plot the results, we can use the module RCall. Julia objects can be exported to an R session using the macro @rput, (and retrieved from R with @rget). R code can be called by prefixing a string with R, e.g. R\"print()\", or multiline R\"\"\"...\"\"\". You can also enter the R session interactively through the Julia REPL by entering the character $. Here we plot the phylogeny using some R-packages that we load first.","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"using RCall\n\nN = state_shifts(model, primates, Ds, Ss; ape_order = true)\nN = sum(N, dims = 2:3)[:,1,1]\n@rput primates\n@rput N\n\nR\"\"\"\nlibrary(tibble)\nlibrary(tidytree)\nx <- as_tibble(primates)\nrates <- data.frame(\"node\" = 1:465, \"nshift\" = N)\ntd <- as.treedata(merge(x, rates, by = \"node\"))\n\"\"\"","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"We can use ggtree to plot the number of accumulated shifts on the branches","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"R\"\"\"\nlibrary(ggplot2)\nlibrary(ggtree)\np3 <- ggtree(td, aes(color = nshift)) + \n    geom_tiplab(size=2) +\n    scale_colour_gradient(low = \"black\", high = \"red\")\n\"\"\"","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"ggsave(\"src/asses/primates_4state_shift.svg\", p3, width = 150, height = 120, units = \"mm\") # hide","category":"page"},{"location":"analysis/shifts/","page":"Number of shifts","title":"Number of shifts","text":"(Image: primatestree)","category":"page"}]
}
